(()=>{const a=document.createElement('link'),b=document.createElement('link'),c=document.createElement('link');a.type='text/css',b.type='text/css',c.type='text/css',a.rel='stylesheet',b.rel='stylesheet',c.rel='stylesheet',a.href='https://fonts.googleapis.com/css?family=Dosis',b.href='marquee.min.css',c.href='style.min.css';const d=document.getElementsByTagName('link')[0];d.parentNode.insertBefore(a,d),d.parentNode.insertBefore(b,d),d.parentNode.insertBefore(c,d)})();const URL='https://ghibliapi.herokuapp.com/films',app=document.querySelector('#root'),container=document.createElement('div');container.setAttribute('class','container'),app.appendChild(container);const buildCard=({title:a,description:b})=>{const c=document.createElement('div');c.setAttribute('class','card');const d=document.createElement('h1');d.textContent=a,c.appendChild(d);const e=document.createElement('p');e.textContent=`${b.substring(0,300)}..`,c.appendChild(e),container.appendChild(c)};fetch(URL).then((a)=>a.ok?a.json():Promise.reject(new Error(`Network response was not ok - Status ${a.status}-${a.statusText}`))).then((a)=>a.forEach(buildCard)).catch((a)=>{const b=document.createElement('div');b.classList.add('marquee');const c=document.createElement('p');c.textContent=`It broke! ${a}`,b.appendChild(c),app.appendChild(b)});